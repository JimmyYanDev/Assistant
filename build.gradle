// Top-level build file where you can add configuration options common to all sub-projects/modules.
buildscript {
    ext.kotlin_version = "1.4.0"
    repositories {
        google()
        jcenter()
    }
    dependencies {
        classpath "com.android.tools.build:gradle:4.1.2"
        classpath "org.jetbrains.kotlin:kotlin-gradle-plugin:$kotlin_version"

        // NOTE: Do not place your application dependencies here; they belong
        // in the individual module build.gradle files
    }
}

allprojects {
    repositories {
        google()
        jcenter()
    }
}

task clean(type: Delete) {
    delete rootProject.buildDir
}

ext {
    compileSdkVersion = 28
    buildToolsVersion = "30.0.3"
    minSdkVersion = 16
    targetSdkVersion = 28
    sourceCompatibility = JavaVersion.VERSION_1_8
    targetCompatibility = JavaVersion.VERSION_1_8

    useCertificate = 'platform.sprd'
//    useCertificate = 'platform.mtk'
    print(rootDir.path)
    useFreemePlatformRes = true
    useFreemePlatformJar = true
    extrasDir = new File(rootDir, "extras")
    if (extrasDir.exists()) {
        sdkFreemeSigningsDir = file("${extrasDir}/signings").path
        sdkFreemePlatformDir = file("${extrasDir}/platforms/android-${compileSdkVersion}").path

        // signing
        if (file("${sdkFreemeSigningsDir}/signings.properties").exists()) {
            Properties signingsProperties = new Properties()
            signingsProperties.load(file("${sdkFreemeSigningsDir}/signings.properties").newDataInputStream())

            storeFile = file("${sdkFreemeSigningsDir}/${signingsProperties["key.${useCertificate}.store"]}").path
            storePassword = signingsProperties["key.${useCertificate}.store.password"]
            keyAlias = signingsProperties["key.${useCertificate}.alias"]
            keyPassword = signingsProperties["key.${useCertificate}.password"]
        }
        // sdk
        if (file("${sdkFreemePlatformDir}").exists()) {
            if (useFreemePlatformRes && file("${sdkFreemePlatformDir}/freeme-framework-res.apk").exists()) {
                sdkFreemePlatformRes = file("${sdkFreemePlatformDir}/freeme-framework-res.apk").path
            }
            if (useFreemePlatformJar && file("${sdkFreemePlatformDir}/android.jar").exists()) {
                sdkFreemePlatformJar = file("${sdkFreemePlatformDir}/android.jar").path
            }
        }
    }
}
